{"version":3,"sources":["components/Order/Order.js","containers/Orders.js"],"names":["StyledOrder","styled","div","_templateObject","order","props","ingredients","ingredientName","push","name","amount","ingredientOutput","map","ig","react_default","a","createElement","style","textTransform","display","margin","border","padding","key","Number","parseFloat","price","toFixed","Orders","this","onFetchOrders","token","userId","orders","Spinner","loading","Order","id","Component","connect","state","auth","dispatch","actions","withErrorHandler","axios"],"mappings":"+XAGA,IA+BaA,OAAcC,EAAOC,IAAVC,KASTC,EAxCD,SAAAC,GACZ,IAAMC,EAAc,GAEpB,IAAK,IAAIC,KAAkBF,EAAMC,YAC/BA,EAAYE,KACV,CACEC,KAAMF,EACNG,OAAQL,EAAMC,YAAYC,KAKhC,IAAMI,EAAmBL,EAAYM,IAAI,SAAAC,GACvC,OAAOC,EAAAC,EAAAC,cAAA,QACGC,MAAO,CACLC,cAAe,aACfC,QAAS,eACTC,OAAQ,QACRC,OAAQ,iBACRC,QAAS,OAEXC,IAAKV,EAAGJ,MAAOI,EAAGJ,KARrB,KAQ6BI,EAAGH,OARhC,OAUT,OACEI,EAAAC,EAAAC,cAAChB,EAAD,KACEc,EAAAC,EAAAC,cAAA,yBAAiBL,GACjBG,EAAAC,EAAAC,cAAA,mBAAUF,EAAAC,EAAAC,cAAA,qBAAaQ,OAAOC,WAAWpB,EAAMqB,OAAOC,QAAQ,sCCpB9DC,8LAGFC,KAAKxB,MAAMyB,cAAcD,KAAKxB,MAAM0B,MAAOF,KAAKxB,MAAM2B,yCAItD,IAAIC,EAASnB,EAAAC,EAAAC,cAACkB,EAAA,EAAD,MAUb,OATML,KAAKxB,MAAM8B,UACfF,EAASJ,KAAKxB,MAAM4B,OAAOrB,IAAK,SAAAR,GAAK,OACjCU,EAAAC,EAAAC,cAACoB,EAAD,CACEb,IAAKnB,EAAMiC,GACX/B,YAAaF,EAAME,YACnBoB,MAAOtB,EAAMsB,WAKnBZ,EAAAC,EAAAC,cAAA,WACGiB,UAnBYK,aAwCNC,sBAfS,SAAAC,GACtB,MAAO,CACLP,OAAQO,EAAMpC,MAAM6B,OACpBE,QAASK,EAAMpC,MAAM+B,QACrBJ,MAAOS,EAAMC,KAAKV,MAClBC,OAAQQ,EAAMC,KAAKT,SAII,SAAAU,GACzB,MAAO,CACLZ,cAAe,SAAEC,EAAOC,GAAT,OAAqBU,EAASC,IAAoBZ,EAAOC,OAI7DO,CAA6CK,YAAiBhB,EAAQiB","file":"static/js/2.697a9d57.chunk.js","sourcesContent":["import React from 'react';\nimport styled from 'styled-components';\n\nconst order = props => {\n  const ingredients = [];\n\n  for (let ingredientName in props.ingredients) {\n    ingredients.push(\n      { \n        name: ingredientName, \n        amount: props.ingredients[ingredientName]\n      }\n    );\n  }\n\n  const ingredientOutput = ingredients.map(ig => {\n    return <span\n              style={{\n                textTransform: 'capitalize',\n                display: 'inline-block',\n                margin: '0 8px',\n                border: '1px solid #ccc',\n                padding: '5px'  \n              }} \n              key={ig.name}>{ig.name} ({ig.amount})</span>;\n  });\n  return (\n    <StyledOrder>\n      <p>Ingredients: {ingredientOutput}</p>\n      <p>Price: <strong>USD {Number.parseFloat(props.price).toFixed(2)}</strong></p>\n    </StyledOrder>\n  );\n};\n\nexport const StyledOrder = styled.div`\n  width: 80%;\n  border: 1px solid #eee;\n  box-shadow: 0 2px 3px #ccc;\n  padding: 10px;\n  margin: 10px auto;\n  box-sizing: border-box;\n`;\n\nexport default order;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\nimport Order from '../components/Order/Order';\nimport Spinner from '../components/UI/Spinner';\nimport axios from '../axios-orders';\nimport withErrorHandler from '../hoc/withErrorHandler';\nimport * as actions from '../store/actions/index';\n\nclass Orders extends Component {\n\n  componentDidMount () {\n    this.props.onFetchOrders(this.props.token, this.props.userId);\n  }\n\n  render () {\n    let orders = <Spinner />;\n    if ( !this.props.loading ) {\n      orders = this.props.orders.map( order => (\n          <Order \n            key={order.id}\n            ingredients={order.ingredients}\n            price={order.price} /> \n        )\n      )\n    }\n    return(\n      <div>\n        {orders}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    orders: state.order.orders,\n    loading: state.order.loading,\n    token: state.auth.token,\n    userId: state.auth.userId\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onFetchOrders: ( token, userId ) => dispatch(actions.fetchOrders(token, userId))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withErrorHandler(Orders, axios));\n"],"sourceRoot":""}